name: CI

on: [pull_request]

jobs:
  build:
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
      cancel-in-progress: false
    permissions:
      contents: write
      statuses: write

    steps:
    - name: Set PR number and branch names
      run: |
        echo "PR_NUMBER=${{ github.event.number }}" >> $GITHUB_ENV
        echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
        echo "BASE_BRANCH_NAME=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV

    - name: Cache ccache
      uses: actions/cache@v4
      with:
        path: /local/mnt/workspace/ccache/${{ env.BASE_BRANCH_NAME }}
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Checkout llvm-project
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
        path: pr-${{ env.PR_NUMBER }}/llvm-project

    - name: Checkout qualcomm/eld
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: qualcomm/eld
        path: pr-${{ env.PR_NUMBER }}/llvm-project/llvm/tools/eld

    - name: Fetch and update repository
      if: steps.cache.outputs.cache-hit == 'true'
      run: |
        cd pr-${{ env.PR_NUMBER }}/llvm-project
        git fetch origin
        git reset --hard origin/${{ github.event.pull_request.head.ref }}

    - name: Run CMake
      run: |
        ccache --set-config max_size=10GB --dir /local/mnt/workspace/ccache/${{ env.BASE_BRANCH_NAME }}
        rm -rf pr-${{ env.PR_NUMBER }}/obj
        mkdir -p pr-${{ env.PR_NUMBER }}/obj
        cd pr-${{ env.PR_NUMBER }}/obj
        cmake -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DLLVM_ENABLE_PROJECTS="llvm;clang;clang-tools-extra" \
          -DLLVM_CCACHE_DIR=/local/mnt/workspace/ccache/${{ env.BASE_BRANCH_NAME }} \
          -DLLVM_CCACHE_BUILD:BOOL=ON \
          -DCMAKE_INSTALL_RPATH:STRING="$ORIGIN/../lib" \
          -DCMAKE_C_COMPILER:STRING=`which clang` \
          -DCMAKE_CXX_COMPILER:STRING=`which clang++` \
          -DCMAKE_CXX_FLAGS="-stdlib=libc++" \
          -DLLVM_TARGETS_TO_BUILD:STRING="ARM;AArch64;RISCV;Hexagon;X86" \
          -DELD_TARGETS_TO_BUILD='ARM;AArch64;RISCV;Hexagon;x86_64' \
          -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
          ../llvm-project/llvm

    - name: Check ccache directory size
      run: |
        echo "Current ccache size:"
        du -sh /local/mnt/workspace/ccache/${{ env.BASE_BRANCH_NAME }}

    - name: Cache Usage before build
      run: |
           cd pr-${{ env.PR_NUMBER }}/obj
           ccache -s --dir /local/mnt/workspace/ccache/${{ env.BASE_BRANCH_NAME }}

    - name: Build Project
      run: |
          cd pr-${{ env.PR_NUMBER }}/obj
          ninja

    - name: Cache Usage after build
      run: |
         cd pr-${{ env.PR_NUMBER }}/obj
         ccache -s --dir /local/mnt/workspace/ccache/${{ env.BASE_BRANCH_NAME }}

    - name: Run Tests
      run: |
        cd pr-${{ env.PR_NUMBER }}/obj
        ninja check-eld

    - name: Save ccache
      uses: actions/cache@v4
      with:
        path: /local/mnt/workspace/ccache/${{ env.BASE_BRANCH_NAME }}
        key: ${{ runner.os }}-ccache-${{ github.sha }}

  cleanup:
    runs-on: self-hosted
    needs: build
    if: always()
    steps:
    - name: Cleanup build directory
      run: |
        rm -rf pr-${{ github.event.number }}

