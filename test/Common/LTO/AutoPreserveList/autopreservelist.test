# Tests symbols resolved as a result of LTO and what symbols get preserved
UNSUPPORTED: windows
RUN: %clang %clangopts -c -flto %p/Inputs/main.c -o %t1.o
RUN: %clang %clangopts -c %p/Inputs/foo.c -o %t2.o
RUN: %link %linkopts -M  %t1.o %t2.o -o %t2.out --trace=symbol=foo --trace=symbol=bar --trace=lto 2>&1 | %filecheck %s
RUN: %nm -n %t2.out | %filecheck %s -check-prefix=SYMBOLS
RUN: %link %linkopts -M  %t1.o %t2.o -o %t3.out -e main --trace=symbol=foo --trace=symbol=bar --trace=lto 2>&1 | %filecheck %s --check-prefix=CHECK --check-prefix=MAIN
RUN: %nm -n %t3.out | %filecheck %s -check-prefix=SYMBOLS -check-prefix=SYMBOLS-MAIN

#CHECK-DAG: Note: Symbol `bar' from Input file `{{[ -\(\)_A-Za-z0-9.\\/:]+}}' with info `(BITCODE)(FUNCTION)(DEFINE)[Global]{DEFAULT}' being added to Namepool
#CHECK-DAG: Note: Symbol `bar' from Input file `{{[ -\(\)_A-Za-z0-9.\\/:]+}}' with info `(ELF)(NOTYPE)(UNDEFINED)[Global]{DEFAULT}' being added to Namepool
#CHECK-DAG: Note: Symbol `foo' from Input file `{{[ -\(\)_A-Za-z0-9.\\/:]+}}' with info `(ELF)(FUNCTION)(DEFINE)[Global]{DEFAULT}' being added to Namepool

#CHECK-DAG: Note: Preserving symbol bar
#MAIN-DAG: Note: Preserving symbol main
#CHECK: Note: Adding LTO module {{[ -\(\)_A-Za-z0-9.\\/:]+}}

#SYMBOLS-MAIN: {{[0-9a-f]+}} T main
#SYMBOLS: {{[0-9a-f]+}} T bar
#SYMBOLS: {{[0-9a-f]+}} T foo
