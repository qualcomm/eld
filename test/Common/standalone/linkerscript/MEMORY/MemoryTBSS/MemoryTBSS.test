UNSUPPORTED: ndk-build
#---MemoryTBSS.test--------------------- Executable,LS------------------#


#BEGIN_COMMENT
# This tests checks that the linker is able to parse MEMORY linker script
# command and creates a memory layout as specified by the MEMORY command
# with TBSS sections and checks that the layout matches expected behavior
#END_COMMENT
#START_TEST
RUN: %clang %clangg0opts -c %p/Inputs/1.c -o %t1.1.o -ffunction-sections \
RUN: -fno-asynchronous-unwind-tables  -fdata-sections
RUN: %link %linkg0opts -MapStyle txt %t1.1.o -L %p/Inputs/ \
RUN: -T %p/Inputs/script.t -o %t2.out -Map %t1.map --noinhibit-exec \
RUN: 2>&1
RUN: %readelf -S -W %t2.out 2>&1 | %filecheck %s
RUN: %filecheck %s -check-prefix=MAP < %t1.map
#END_TEST
#CHECK: .tbss NOBITS [[ADDR:[xa-f0-9]+]]
#CHECK: .mydata PROGBITS [[ADDR]]
#MAP: .foo {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC|SHF_EXECINSTR, Type: SHT_PROGBITS, Memory : [MYMEM, MYMEM]
#MAP: .tbss {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC|SHF_WRITE|SHF_TLS, Type: SHT_NOBITS, Memory : [MYMEM, MYMEM]
#MAP: .mydata {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC|SHF_WRITE, Type: SHT_PROGBITS, Memory : [MYMEM, MYMEM]
#MAP: .otherdata {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC|SHF_WRITE, Type: SHT_PROGBITS, Memory : [MYMEM, MYMEM]
#MAP: /DISCARD/ {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC|SHF_WRITE, Type: SHT_NOBITS, Memory : [MYMEM, MYMEM]
