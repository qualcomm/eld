#---OverrideVMA.test--------------------- Executable,LS------------------#

#BEGIN_COMMENT
# This tests checks that the linker is able to parse MEMORY linker script
# command and creates a memory layout as specified by the MEMORY command
# with overrides specified by the user for sections
#END_COMMENT
#START_TEST
RUN: %clang %clangopts -c %p/Inputs/1.c -o %t1.1.o -ffunction-sections -fno-asynchronous-unwind-tables
RUN: %link -MapStyle txt %linkopts %t1.1.o -L %p/Inputs/ \
RUN: -T %p/Inputs/script.t -o %t2.out -Map %t1.map \
RUN: 2>&1
RUN: %readelf -l -W %t2.out 2>&1 | %filecheck %s
RUN: %filecheck %s -check-prefix=MAP < %t1.map
#END_TEST
#CHECK: .foo .bar
#MAP: .foo {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC, Type: SHT_PROGBITS, Segments : [ A ], Memory : [FOO, FOO]
#MAP: .bar {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC|SHF_EXECINSTR, Type: SHT_PROGBITS, Segments : [ A ], Memory : [FOO, FOO]
#MAP: /DISCARD/ {{.*}} {{.*}} # Offset: {{.*}}, LMA: {{.*}}, Alignment: {{.*}}, Flags: SHF_ALLOC|SHF_WRITE, Type: SHT_NOBITS, Segments : [ A ], Memory : [FOO, FOO]
