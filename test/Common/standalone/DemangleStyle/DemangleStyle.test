#---DemangleStyle.test--------------------- Executable--------------------#

#BEGIN_COMMENT
#This tests that the linker supports demangling symbols by default when showing
#symbols in the Map file. The test shows the demangled output for common symbols
#and functions displayed.
#END_COMMENT
RUN: %clang %clangopts -c %p/Inputs/a.s -o %t1.1.o -ffunction-sections
# Test demangle style by default.
RUN: %link %linkopts %t1.1.o -o %t1.out -e main -M 2>&1 | %filecheck %s -check-prefix=MANGLE
# Test that --demangle-style=mangle, also mangles names.
RUN: %link %linkopts %t1.1.o -o %t1.out -e main -M --demangle-style=demangle 2>&1 | %filecheck %s -check-prefix=MANGLE
# Test that demangle-style=none does not demangle symbol names.
RUN: %link %linkopts %t1.1.o -o %t1.out -e main --demangle-style=none -M 2>&1 | %filecheck %s -check-prefix=NOMANGLE
# Test that the short cut option of using --no-demangle, disables demangling.
RUN: %link %linkopts %t1.1.o -o %t1.out -e main --no-demangle -M 2>&1 | %filecheck %s -check-prefix=NOMANGLE

#MANGLE: crap::mycommon  {{.*}}
#MANGLE: {{.*}} A::foo()
#MANGLE: {{.*}} crap::mycommon

#NOMANGLE-NOT: crap::mycommon  {{.*}}

