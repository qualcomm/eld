#---Visibility.test--------------------- Exe/DSO------------------#


#BEGIN_COMMENT
# Test visibility attributes particularly protected and hidden
#----------------------------------------------------------------
#END_COMMENT

#A hidden symbol must not be exported from a shared lib.
#Try linking an application with reference to such symbol. It must fail
RUN: %clang %clangopts -c %p/Inputs/1.c  -o %t1.o %clangg0opts
RUN: %clang %clangopts -c %p/Inputs/2.c -fpic -o %t2.o
RUN: %link %linkopts -shared -o %t1.so %t2.o
RUN: %not %link %linkopts --warn-once -dy %t1.o %t1.so 2>&1 | %filecheck --check-prefix="HIDDEN1" %s
#
HIDDEN1: undefined reference to `a'
#
#Try making a shared library with a hidden reference. Shared lib
#must not link %linkopts since it expects it in same module
RUN: %clang %clangopts -c %p/Inputs/3.c -fpic -o %t3.o
RUN: %not %link %linkopts -shared %t3.o -o %t3.so 2>&1 | %filecheck --check-prefix="HIDDEN2" %s
#
HIDDEN2: undefined hidden symbol `a' cannot be used when making a shared object
#
#Make sure that LTO works correct with the hidden symbols.
#A library with hidden symbol and an object with hidden symbol, should cause the
#linker to pick up and preserve the symbol in object
#
RUN: %clang %clangopts -c %p/Inputs/4.c -flto -o %t6.bc
RUN: %link %linkopts -dy %t1.o %t1.so %t6.bc --trace=lto -o %t7.out 2>&1 | %filecheck --check-prefix="HIDDEN3" %s
#
HIDDEN3: Preserving symbol a
#
#Check archive resolution has not changed with symbol visibility
RUN: %clang %clangopts -c %p/Inputs/5.c  -o %t7.o %clangg0opts
RUN: %clang %clangopts -c %p/Inputs/6.c  -o %t8.o %clangg0opts
RUN: %ar cr %aropts %t.eight.a %t2.o
RUN: %link %linkopts %t1.o %t.eight.a  -o %t41.out -t 2>&1 | %grep eight | wc -l |  %filecheck --check-prefix="HIDDEN41" %s
RUN: %ar cr %aropts %t.nine.a %t7.o
RUN: %link %linkopts %t1.o %t.nine.a  -o %t42.out -t 2>&1 | %grep nine | wc -l |  %filecheck --check-prefix="HIDDEN42" %s
RUN: %ar cr %aropts %t.ten.a %t8.o
RUN: %link %linkopts %t1.o %t.ten.a %t.eight.a  %t.nine.a  -o %t43.out -t 2>&1 | %grep ten | wc -l |  %filecheck --check-prefix="HIDDEN43" %s

HIDDEN41: 1
HIDDEN42: 1
HIDDEN43: 1

#Check that a protected reference from an application must result in undefined
#reference if the definition is in a shared object
RUN: %clang %clangopts -c %p/Inputs/7.c  -o %t10.o %clangg0opts
RUN: %not %link -o %t1out.err.1 %linkopts -dy %t10.o %t1.so 2>&1 | %filecheck --check-prefix="PROTECTED1" %s

PROTECTED1:  undefined reference to `a'

#Try making a shared library with a protected reference. Shared lib
#must not link %linkopts since it expects definition in same module
RUN: %clang %clangopts -c %p/Inputs/8.c -fpic -o %t11.o
RUN: %not %link %linkopts -shared %t11.o -o %t11.so 2>&1 | %filecheck --check-prefix="PROTECTED2" %s
#
PROTECTED2: undefined protected symbol `a' cannot be used when making a shared object

#Make sure that LTO works correct with the protected symbols.
#A library with protected symbol and an object with symbol, should cause the
#linker to pick up and preserve the symbol in object
#
RUN: %link %linkopts -dy %t10.o %t1.so %t6.bc --trace=lto -o %t7.out 2>&1 | %filecheck --check-prefix="PROTECTED3" %s
PROTECTED3: Preserving symbol a

#Make sure the section magic symbols are also supported ith proper visibility.
#These symbols are always defined by linker per module. So they should not be
#flagged as undefined
RUN: %clang %clangopts -c %p/Inputs/9.c  -fpic -o %t11.o
RUN: %link %linkopts -shared %t11.o -o %t11.so
RUN: %readelf -s %t11.so | %filecheck --check-prefix="MAGIC1" %s
MAGIC1: __start_foo
RUN: %clang %clangopts -c %p/Inputs/10.c  -fpic -o %t12.o
RUN: %not %link %linkopts -shared %t12.o -o %t12.so 2>&1 | %filecheck --check-prefix="MAGIC2" %s
MAGIC2:  undefined reference to `__start_bar'

#For a protected reference, linker must not resolve reference from a shared
#library if there is a definition available in a library
RUN: %clang %clangopts -c %p/Inputs/11.c  -o %t11.2.o %clangg0opts
RUN: %clang %clangopts -c %p/Inputs/12.c  -fpic -o %t12.2.o %clangg0opts
RUN: %clang %clangopts -c %p/Inputs/13.c  -o %t13.2.o %clangg0opts
RUN: mkdir -p %tdir
RUN: %ar cr %aropts %tdir/lib3.a %t13.2.o
RUN: %link %linkopts -shared -o %tshlib12.so %t12.2.o
RUN: %link %linkopts  %linkg0opts  -dy %t11.2.o %tshlib12.so -L%tdir -l3 -t -o %t.out 2>&1 | %filecheck %s --check-prefix="PROTARCH"
PROTARCH: lib3.a
